# `Shop\Customer\Orders` related APIs.
extend type Query @guard(with: ["api"]) {
    ordersList (
        input: FilterCustomerOrderInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\OrderQuery")
    ): [Order!] @paginate(
        type: "PAGINATOR",
        model: "Webkul\\Sales\\Models\\Order",
        defaultCount: 10
    )

    orderDetail (
        id: ID! @eq
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\OrderQuery@getOrder")
    ): Order @find(model: "Webkul\\Sales\\Models\\Order")

    viewInvoices(
        input: OrderInvoiceInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\InvoiceQuery")
    ): [Invoice!] @paginate(
        type: "PAGINATOR",
        model: "Webkul\\Sales\\Models\\Invoice",
        defaultCount: 10
    )

    viewInvoice (
        id: ID @eq
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\InvoiceQuery@getInvoice")
    ): Invoice @find(model: "Webkul\\Sales\\Models\\Invoice")

    viewShipments (
        input: OrderShipmentInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\ShipmentQuery")
    ): [Shipment!] @paginate(
        type: "PAGINATOR",
        model: "Webkul\\Sales\\Models\\Shipment",
        defaultCount: 10
    )

    viewShipment (
        id: ID @eq
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\ShipmentQuery@getShipment")
    ): Shipment @find(model: "Webkul\\Sales\\Models\\Shipment")

    viewRefunds (
        input: OrderRefundInput
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\RefundQuery")
    ): [Refund!] @paginate(
        type: "PAGINATOR",
        model: "Webkul\\Sales\\Models\\Refund",
        defaultCount: 10
    )

    viewRefund (
        id: ID @eq
        @builder(method: "Webkul\\GraphQLAPI\\Queries\\Shop\\Customer\\RefundQuery@getRefund")
    ): Refund @find(model: "Webkul\\Sales\\Models\\Refund")
}

extend type Mutation @guard(with: ["api"]) {
    cancelCustomerOrder(id: ID!): CancelOrderResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\OrderMutation@cancel")

    reorder(id: ID! @eq): CartItemResponse @field(resolver: "Webkul\\GraphQLAPI\\Mutations\\Shop\\Customer\\OrderMutation@reorder")
}

input FilterCustomerOrderInput {
    id: Int
    incrementId: Int @rename(attribute: "increment_id")
    customerId: ID @rename(attribute: "customer_id")
    subTotal: Float @rename(attribute: "sub_total")
    grandTotal: Float @rename(attribute: "grand_total")
    baseSubTotal: Float @rename(attribute: "base_sub_total")
    baseGrandTotal: Float @rename(attribute: "base_grand_total")
    orderDate: String @rename(attribute: "order_date")
    orderDateFrom: String @rename(attribute: "order_date_from")
    orderDateTo: String @rename(attribute: "order_date_to")
    channelName: String @rename(attribute: "channel_name")
    status: String
    all: String
}

input OrderShipmentInput {
    id: Int
    orderId: Int @rename(attribute: "order_id")
    shipmentDate: String @rename(attribute: "shipment_date")
    carrierTitle: String @rename(attribute: "carrier_title")
    trackNumber: String @rename(attribute: "track_number")
}

input OrderInvoiceInput {
    id: Int
    orderId: Int @rename(attribute: "order_id")
    totalQty: Int @rename(attribute: "total_qty")
    grandTotal: Float @rename(attribute: "grand_total")
    baseGrandTotal: Float @rename(attribute: "base_grand_total")
    invoiceDate: String @rename(attribute: "invoice_date")
}

input OrderRefundInput {
    id: Int
    orderId: Int @rename(attribute: "order_id")
    totalQty: Int @rename(attribute: "total_qty")
    adjustmentRefund: Float @rename(attribute: "adjustment_refund")
    adjustmentFee: Float @rename(attribute: "adjustment_fee")
    shippingAmount: Float @rename(attribute: "shipping_amount")
    taxAmount: Float @rename(attribute: "tax_amount")
    discountAmount: Float @rename(attribute: "discount_amount")
    grandTotal: Float @rename(attribute: "grand_total")
    baseGrandTotal: Float @rename(attribute: "base_grand_total")
    refundDate: String @rename(attribute: "refund_date")
}
